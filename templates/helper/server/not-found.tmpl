{{- /*
  Copyright (c) Liam Stanley <liam@liam.sh>. All rights reserved. Use of
  this source code is governed by the MIT license that can be found in
  the LICENSE file.
*/ -}}
{{- define "helper/rest/server/not-found" -}}
    {{- if eq $.Annotations.RestConfig.Handler "chi" }}
        r.NotFound(func(w http.ResponseWriter, r *http.Request) {
            handleResponse[struct{}](s, w, r, "", nil, ErrEndpointNotFound)
        })
        r.MethodNotAllowed(func(w http.ResponseWriter, r *http.Request) {
            handleResponse[struct{}](s, w, r, "", nil, ErrMethodNotAllowed)
        })
    {{- else }}
        mux.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
            {{- if not $.Annotations.RestConfig.DisableSpecHandler }}
                if !s.config.DisableSpecHandler && !s.config.DisableDocsHandler && r.URL.Path == "/" && r.Method == http.MethodGet {
                    // If specs are enabled, it's safe to provide documentation, and if they don't override the
                    // root endpoint, we can redirect to the docs.
                    http.Redirect(w, r, s.config.BasePath+"/docs", http.StatusTemporaryRedirect)
                    return
                }
            {{- end }}
            if r.Method != http.MethodGet {
                handleResponse[struct{}](s, w, r, "", nil, ErrMethodNotAllowed)
                return
            }
            handleResponse[struct{}](s, w, r, "", nil, ErrEndpointNotFound)
        })
    {{- end }}
{{- end }}{{/* end template */}}
