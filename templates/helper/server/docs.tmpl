{{- /*
  Copyright (c) Liam Stanley <liam@liam.sh>. All rights reserved. Use of
  this source code is governed by the MIT license that can be found in
  the LICENSE file.
*/ -}}
{{- define "helper/rest/server/docs/config" }}
    {{- if not $.Annotations.RestConfig.DisableSpecHandler }}
        // DisableDocsHandler if set to true, will disable the embedded API reference documentation
        // endpoint at /docs. Use this if you want to provide your own documentation functionality.
        // This is disabled by default if [ServerConfig.DisableSpecHandler] is true.
        DisableDocsHandler bool
    {{ end }}
{{ end }}{{/* end template */}}

{{- define "helper/rest/server/docs/route" -}}
    {{ if not $.Annotations.RestConfig.DisableSpecHandler }}
        if !s.config.DisableSpecHandler && !s.config.DisableDocsHandler {
            {{- template "helper/rest/server/endpoint" (dict
                "Handler" $.Annotations.RestConfig.Handler
                "Method" "GET"
                "Path" "/docs"
                "Func" "s.Docs"
            ) }}
        }
    {{- end }}
{{- end }}{{/* end template */}}

{{- define "helper/rest/server/docs" }}
var scalarTemplate = template.Must(template.New("docs").Parse(`<!DOCTYPE html>
<html>
  <head>
    <title>API Reference</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="darkreader-lock">
    <link rel="icon" type="image/svg+xml"
      href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' viewBox='0 0 1024 1024'%3E%3Cpath fill='currentColor' d='m917.7 148.8l-42.4-42.4c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-76.1 76.1a199.27 199.27 0 0 0-112.1-34.3c-51.2 0-102.4 19.5-141.5 58.6L432.3 308.7a8.03 8.03 0 0 0 0 11.3L704 591.7c1.6 1.6 3.6 2.3 5.7 2.3c2 0 4.1-.8 5.7-2.3l101.9-101.9c68.9-69 77-175.7 24.3-253.5l76.1-76.1c3.1-3.2 3.1-8.3 0-11.4M769.1 441.7l-59.4 59.4l-186.8-186.8l59.4-59.4c24.9-24.9 58.1-38.7 93.4-38.7s68.4 13.7 93.4 38.7c24.9 24.9 38.7 58.1 38.7 93.4s-13.8 68.4-38.7 93.4m-190.2 105a8.03 8.03 0 0 0-11.3 0L501 613.3L410.7 523l66.7-66.7c3.1-3.1 3.1-8.2 0-11.3L441 408.6a8.03 8.03 0 0 0-11.3 0L363 475.3l-43-43a7.85 7.85 0 0 0-5.7-2.3c-2 0-4.1.8-5.7 2.3L206.8 534.2c-68.9 69-77 175.7-24.3 253.5l-76.1 76.1a8.03 8.03 0 0 0 0 11.3l42.4 42.4c1.6 1.6 3.6 2.3 5.7 2.3s4.1-.8 5.7-2.3l76.1-76.1c33.7 22.9 72.9 34.3 112.1 34.3c51.2 0 102.4-19.5 141.5-58.6l101.9-101.9c3.1-3.1 3.1-8.2 0-11.3l-43-43l66.7-66.7c3.1-3.1 3.1-8.2 0-11.3zM441.7 769.1a131.32 131.32 0 0 1-93.4 38.7c-35.3 0-68.4-13.7-93.4-38.7a131.32 131.32 0 0 1-38.7-93.4c0-35.3 13.7-68.4 38.7-93.4l59.4-59.4l186.8 186.8z'/%3E%3C/svg%3E" />
  </head>
  <body>
    <script id="api-reference"></script>
    <script>
      document.getElementById("api-reference").dataset.configuration = JSON.stringify({
        spec: {
          url: "{{ "{{" }} $.SpecPath {{ "}}" }}",
        },
        {{- if not $.Annotations.RestConfig.DisableSpecHandler }}
        {{ "{{- " }}if $.DisableSpecInjectServer{{ " }}" }}
        servers: [
            {url: window.location.origin + window.location.pathname.replace(/\/docs$/g, "")}
        ],
        {{ "{{- " }}end{{ " }}" }}
        {{- end }}
        theme: "kepler",
        isEditable: false,
        hideDownloadButton: true,
        customCss: ".darklight-reference-promo { visibility: hidden !important; height: 0 !important; } .open-api-client-button { display: none !important; }",
      });
    </script>
    <script
      src="https://cdn.jsdelivr.net/npm/@scalar/api-reference@1.25.99"
      integrity="sha256-uuOSJ5AN5uhftgJPc4yYZ3PZpdYcsolIRamzCKTiJnE="
      crossorigin="anonymous"
    ></script>
  </body>
</html>`))

func (s *Server) Docs(w http.ResponseWriter, r *http.Request) {
    var buf bytes.Buffer
    err := scalarTemplate.Execute(&buf, map[string]any{
        "SpecPath": s.config.BasePath + "/openapi.json",
        {{- if not $.Annotations.RestConfig.DisableSpecHandler }}
          "DisableSpecInjectServer": s.config.DisableSpecInjectServer,
        {{- end }}
    })
    if err != nil {
        handleResponse[struct{}](s, w, r, "", nil, err)
        return
    }
    w.Header().Set("Content-Type", "text/html")
    w.Header().Set("Content-Security-Policy", "default-src 'self' cdn.jsdelivr.net fonts.scalar.com 'unsafe-inline' 'unsafe-eval' data: blob:")
    w.Header().Set("X-Frame-Options", "DENY")
    w.Header().Set("X-Content-Type-Options", "nosniff")
    w.Header().Set("Referrer-Policy", "no-referrer-when-downgrade")
    w.Header().Set("Permissions-Policy", "clipboard-write=(self)")
    w.WriteHeader(http.StatusOK)
    _, _ = w.Write(buf.Bytes())
}
{{- end }}{{/* end template */}}
